{"version":3,"sources":["service/API.js","service/ClientService.js","components/DialogQuestion.js","components/AppSettings.js","components/BlacklistService.js","components/DataTableClients.js","components/DataTableBlacklist.js","service/DatasourceService.js","utils/CookiesUtils.js","utils/Translate.js","components/DatasourceView.js","components/InnerData.js","service/ClientTimeoutService.js","components/ClientSettingsView.js","service/RestartService.js","components/OtherSettingsView.js","components/SettingsView.js","service/LogService.js","components/DataTableLogs.js","components/LSTabMenu.js","components/MainSidebar.js","components/SidebarButton.js","components/App.js","serviceWorker.js","index.js","static/ls_logo_big.png","static/ls_logo_svg.svg"],"names":["axios","create","baseURL","responseType","ClientService","API","get","data","clients","imei","delete","imeiArr","i","length","push","DialogQuestion","props","renderFooter","bind","icon","className","onClick","this","onCancel","onConfirm","footer","visible","style","width","backgroundColor","color","modal","header","headerText","onHide","fontSize","message","Component","appSettings","BlacklistService","blacklist","blJson","imeilist","forEach","_imei","post","DataTableClients","emptyClient","state","kickClientDialog","kickClientsDialogSelected","addBlacklistDialog","addBlacklistDialogSelected","selectedClients","selectedClient","amountClients","clientsService","blacklistService","renderButtons","hideKickClientDialog","hideKickClientsDialogSelected","confirmKickClient","confirmKickClientsSelected","kickClient","kickClientsSelected","hideAddBlacklistDialog","hideAddBlacklistDialogSelected","confirmAddBlacklist","confirmAddBlacklistSelected","addBlacklist","addBlacklistSelected","getClients","then","setState","client","filter","kickClients","toast","show","severity","summary","i18n","t","detail","life","response","console","log","includes","addToBlacklist","rowData","buttonStyle","marginLeft","type","tooltip","tooltipOptions","position","textAlign","onInput","e","globalFilter","target","value","placeholder","colSpan","footerStyle","label","disabled","renderHeader","ref","el","border","borderRadius","left","renderToolbarButton","totalRecords","footerColumnGroup","renderFooterGroup","selection","onSelectionChange","emptyMessage","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","rowHover","responsive","resizableColumns","selectionMode","headerStyle","field","sortable","body","DataTableBlacklist","emptyBlacklist","visibility","hidden","removeBlacklistDialog","removeBlacklistDialogSelected","addBlacklistImei","removeBlacklistImei","tagBlacklist","addBlacklistLoading","removeBlacklistLoading","blacklistSize","renderRowButtons","hideRemoveBlacklistDialog","hideRemoveBlacklistDialogSelected","removeBlacklist","removeBlacklistSelected","confirmRemoveBlacklist","confirmRemoveBlacklistSelected","confirmRemoveBlacklistOverlay","getBlacklist","newBlacklist","removeFromBlacklist","op","toggle","marginTop","mode","height","opr","size","btn","DatasourceService","requestForm","put","username","password","host","port","db_name","dbName","db_type","dbType","script_encoding","scriptEncoding","driver_class_name","driverClassName","additional","pool","auto_commit","autoCommit","connection_timeout","connectionTimeout","idle_timeout","idleTimeout","max_life_time","maxLifeTime","maximum_pool_size","maximumPoolSize","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","languages","lng","code","resources","en","translation","ru","getLanguage","lang","DatasourceView","propsType","filteredEncodings","filteredDbTypes","filteredDriverName","disabledApply","disabledReset","encodings","databases","current","datasourceService","changeDatasource","changeState","checkApply","checkProp","reset","searchEncoding","scriptEncodingAutoCompleteTemplate","dbTypeAutoCompleteTemplate","driverNameAutoCompleteTemplate","cardTemplate","searchDriverName","searchDbType","getDatasource","aliases","driver","restart","e1","chState","currentType","propType","defaultValue","newProps","_","isEqual","event","autoSearch","filteredType","elementType","setTimeout","filtered","query","trim","enc","toLowerCase","startsWith","result","item","padding","legend","htmlFor","autoComplete","id","onChange","newPort","parseInt","isNaN","suggestions","completeMethod","dropdown","itemTemplate","autoResize","inputId","checked","data-pr-tooltip","newConnectionTimeout","newIdleTimeout","newLifeTime","newMaximumPoolSize","float","ClientTimeoutService","toutValue","toutBody","client_timeout","ClientSettingsView","smallHintStyleClasses","settingsType","clientTimeout","smallStyleClass","clientTimeoutService","changeClientSettings","checkSetting","getClientTimeout","changeClientTimeout","settingType","newSettings","aria-describedby","newClTout","onFocus","onBlur","RestartService","OtherSettingsView","selectedLang","isDarkMode","onLangChange","changeLanguage","refresh","optionLabel","restartState","iconRestartButton","SettingsView","showRestartButton","iconButtonClassName","restartBtnText","restartService","needRestart","window","scrollTo","top","behavior","forceUpdate","btnTxt","location","resSec","LogService","DataTableLogs","handleSearch","clearTimeout","delaySearchTimer","searchText","logs","logsAmount","date","types","selectedTypes","searchChips","minDate","maxDate","logService","headerTemplate","typeBodyTemplate","onTypeFilterChange","onMessageFilterInput","typeItemTemplate","getLogs","datesLog","sortDatesLog","sort","minDateArr","split","map","d","maxDateArr","prevProps","prevState","display","fontWeight","cal","dateFormat","readOnlyInput","showButtonBar","locale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","weekHeader","dt","day","getDate","zero","res","getMonth","getFullYear","join","er","str","showClear","option","text","typeFilter","renderTypeFilter","msgFilter","renderMessageFilter","rowGroupMode","groupField","sortMode","sortField","rowGroupHeaderTemplate","rowGroupFooterTemplate","footerTemplate","sortOrder","rowIndex","filterElement","wordWrap","LSTabMenuInner","menus","keyLabel","command","hash","tabRef","createRef","tabMenu","tabKeyLabel","find","a","activeItem","tabName","menu","_activeItem","onTabChange","model","LSTabMenu","lsTabRef","React","setActiveIndex","key","exact","component","MainSidebar","changeRoute","substr","onHideSidebar","onShowSidebar","src","ls_logo","alt","SidebarButton","isSidebarVisible","tabMenuRef","init","hashLink","App","margin","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.fd306d1e.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"/admins/commands\",\n    responseType: \"json\"\n});","import API from './API';\n\nexport class ClientService {\n\n    async getClients() {\n        return (await API.get(\"/clients\")).data.clients;\n    }\n\n    async kickClients(imei) {\n        if(typeof imei === \"string\")\n            return (await API.delete(\"/clients?imei=\" + imei)).data;\n        else {\n            let imeiArr = [];\n            for(let i = 0; i < imei.length; i++) {\n                imeiArr.push(imei[i].imei);\n            }\n\n            return (await API.delete(\"/clients?imeiList=\" + imeiArr)).data;\n        }\n    }\n}\n","import React from \"react\";\nimport {Component} from \"react\";\nimport {Dialog} from \"primereact/dialog\";\nimport {Button} from \"primereact/button\";\n\nexport class DialogQuestion extends Component {\n\n    constructor(props) {\n        super(props);\n        this.renderFooter = this.renderFooter.bind(this);\n    }\n\n    renderFooter() {\n        return (\n            <>\n                <Button icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.props.onCancel}/>\n                <Button icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.props.onConfirm}/>\n            </>\n        );\n    }\n\n    render() {\n        const footer = this.renderFooter();\n\n        return (\n            <Dialog visible={this.props.visible}\n                    style={{ width: '30vw', backgroundColor: \"#007ad9\", color:\"white\" }}\n                    modal\n                    header={this.props.headerText}\n                    footer={footer}\n                    onHide={this.props.onHide}>\n                <div>\n                    <div className=\"pi pi-question-circle\" style={{fontSize: \"1.5em\"}}/>\n                    <br/>\n                    {this.props.message}\n                </div>\n            </Dialog>\n        );\n    }\n}","\nexport const appSettings = {\n    TOAST_LIVE: 5000\n};","import API from \"../service/API\";\n\nexport class BlacklistService {\n\n    async getBlacklist() {\n        let blacklist = (await API.get(\"/blacklist\")).data.blacklist;\n        let blJson = [];\n        for(let i = 0; i < blacklist.length; i++) {\n            blJson.push({imei: blacklist[i]});\n        }\n        return blJson;\n    }\n\n    async addToBlacklist(imei) {\n        let data = { imeilist: [] };\n        if(typeof imei === \"string\")\n            data.imeilist.push(imei);\n        else {\n            imei.forEach(_imei => {\n                data.imeilist.push(_imei.imei);\n            });\n        }\n\n        return (await API.post(\"/blacklist\", data)).data;\n    }\n\n    async removeFromBlacklist(imei) {\n        if(typeof imei === \"string\")\n            return (await API.delete('/blacklist?imei=' + imei)).data;\n        else {\n            let imeiArr = [];\n            for(let i = 0; i < imei.length; i++) {\n                imeiArr.push(imei[i].imei);\n            }\n            return (await API.delete('/blacklist?imeiList=' + imeiArr)).data;\n        }\n    }\n}\n","import React from 'react';\nimport {Component} from \"react\";\nimport {ClientService} from \"../service/ClientService\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport { Button } from 'primereact/button';\nimport 'primeicons/primeicons.css';\nimport {InputText} from \"primereact/inputtext\";\nimport {ColumnGroup} from \"primereact/columngroup\";\nimport {Row} from \"primereact/row\";\nimport {Toolbar} from \"primereact/toolbar\";\nimport {DialogQuestion} from \"./DialogQuestion\";\nimport {Toast} from \"primereact/toast\";\nimport {appSettings} from \"./AppSettings\";\nimport {BlacklistService} from \"./BlacklistService\";\nimport i18n from \"i18next\";\n\nexport class DataTableClients extends Component {\n\n    emptyClient = {\n        imei: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            kickClientDialog: false,\n            kickClientsDialogSelected: false,\n            addBlacklistDialog: false,\n            addBlacklistDialogSelected: false,\n            selectedClients: null,\n            selectedClient: this.emptyClient,\n            clients: null,\n            amountClients: 0\n        };\n\n        this.clientsService = new ClientService();\n        this.blacklistService = new BlacklistService();\n        this.renderButtons = this.renderButtons.bind(this);\n\n        this.hideKickClientDialog = this.hideKickClientDialog.bind(this);\n        this.hideKickClientsDialogSelected = this.hideKickClientsDialogSelected.bind(this);\n        this.confirmKickClient = this.confirmKickClient.bind(this);\n        this.confirmKickClientsSelected = this.confirmKickClientsSelected.bind(this);\n        this.kickClient = this.kickClient.bind(this);\n        this.kickClientsSelected = this.kickClientsSelected.bind(this);\n\n        this.hideAddBlacklistDialog = this.hideAddBlacklistDialog.bind(this);\n        this.hideAddBlacklistDialogSelected = this.hideAddBlacklistDialogSelected.bind(this);\n        this.confirmAddBlacklist = this.confirmAddBlacklist.bind(this);\n        this.confirmAddBlacklistSelected = this.confirmAddBlacklistSelected.bind(this);\n        this.addBlacklist = this.addBlacklist.bind(this);\n        this.addBlacklistSelected = this.addBlacklistSelected.bind(this);\n    }\n\n    componentDidMount() {\n        this.clientsService.getClients().then(data => {\n            this.setState({\n                amountClients: data.length,\n                clients: data\n            });\n        });\n    }\n\n    hideKickClientDialog() {\n        this.setState({ kickClientDialog: false });\n    }\n\n    hideKickClientsDialogSelected() {\n        this.setState({ kickClientsDialogSelected: false });\n    }\n\n    confirmKickClient(client) {\n        this.setState({\n            selectedClient: client,\n            kickClientDialog: true\n        });\n    }\n\n    confirmKickClientsSelected() {\n        this.setState({\n            kickClientsDialogSelected: true\n        });\n    }\n\n    async kickClient() {\n        try {\n            let clients = this.state.clients.filter(client => client.imei !== this.state.selectedClient.imei);\n            let data = await this.clientsService.kickClients(this.state.selectedClient.imei);\n            this.setState({\n                clients: clients,\n                kickClientDialog: false,\n                selectedClient: this.emptyClient,\n                amountClients: clients.length\n            });\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: data.message, life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            let response = e.response.data;\n            console.log(i18n.t(\"kickRequestFailed\") + response);\n            this.setState({\n                kickClientDialog: false\n            });\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE });\n        }\n    }\n\n    async kickClientsSelected() {\n        try {\n            let clients = this.state.clients.filter(client => !this.state.selectedClients.includes(client));\n            let data = await this.clientsService.kickClients(this.state.selectedClients);\n\n            this.setState({\n                clients: clients,\n                kickClientsDialogSelected: false,\n                selectedClient: this.emptyClient,\n                amountClients: clients.length\n            });\n\n            this.toast.show({\n                severity: 'success',\n                summary: i18n.t(\"successful\"),\n                detail: data.message,\n                life: appSettings.TOAST_LIVE\n            });\n        } catch (e) {\n            this.setState({\n                kickClientsDialogSelected: false\n            });\n            let response = e.response.data;\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE });\n        }\n    }\n\n    hideAddBlacklistDialog() {\n        this.setState({ addBlacklistDialog: false });\n    }\n\n    hideAddBlacklistDialogSelected() {\n        this.setState({ addBlacklistDialogSelected: false });\n    }\n\n    confirmAddBlacklist(client) {\n        this.setState({\n            selectedClient: client,\n            addBlacklistDialog: true\n        });\n    }\n\n    confirmAddBlacklistSelected() {\n        this.setState({\n            addBlacklistDialogSelected: true\n        });\n    }\n\n    async addBlacklist() {\n        try {\n            let clients = this.state.clients.filter(client => client.imei !== this.state.selectedClient.imei);\n            let data = (await this.blacklistService.addToBlacklist(this.state.selectedClient.imei));\n            this.setState({\n                clients: clients,\n                addBlacklistDialog: false,\n                selectedClient: this.emptyClient,\n                amountClients: clients.length\n            });\n\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: data.message, life: appSettings.TOAST_LIVE});\n        } catch (e) {\n            let response = e.response.data;\n            this.setState({\n                addBlacklistDialog: false\n            });\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE});\n        }\n    }\n\n    async addBlacklistSelected() {\n        try {\n            let clients = this.state.clients.filter(client => !this.state.selectedClients.includes(client));\n            let data = (await this.blacklistService.addToBlacklist(this.state.selectedClients));\n            this.setState({\n                clients: clients,\n                addBlacklistDialog: false,\n                selectedClient: this.emptyClient,\n                amountClients: clients.length\n            });\n\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: data.message, life: appSettings.TOAST_LIVE});\n        } catch (e) {\n            let response = e.response.data;\n            this.setState({\n                addBlacklistDialog: false\n            });\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE});\n        }\n\n        let clients = this.state.clients.filter(client => !this.state.selectedClients.includes(client));\n\n        this.setState({\n            clients: clients,\n            addBlacklistDialogSelected: false,\n            selectedClient: this.emptyClient,\n            amountClients: clients.length\n        });\n\n        this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: i18n.t(\"addedClientsToTheBlacklist\"), life: appSettings.TOAST_LIVE });\n    }\n\n    renderButtons(rowData) {\n        const buttonStyle = {\n            marginLeft: \"0.5em\"\n        };\n\n        return (\n            <div>\n                <Button style={buttonStyle} type=\"button\" icon=\"pi pi-user-minus\" className=\"p-button-warning\"\n                        tooltip={i18n.t(\"kick\")}\n                        onClick={() => {this.confirmKickClient(rowData)}}\n                        tooltipOptions={{position: \"top\"}}/>\n                <Button style={buttonStyle} type=\"button\" icon=\"pi pi-ban\" className=\"p-button-danger\"\n                        tooltip={i18n.t(\"addToTheBlacklist\")}\n                        onClick={() => {this.confirmAddBlacklist(rowData)}}\n                        tooltipOptions={{position: \"top\"}}/>\n            </div>\n        );\n    }\n\n    renderHeader() {\n        return (\n            <div style={{textAlign: \"left\"}}>\n                <span className=\"p-input-icon-left\">\n                    <i className=\"pi pi-search\"/>\n                <InputText\n                    type=\"search\"\n                    onInput={ (e) => this.setState({globalFilter: e.target.value}) }\n                    placeholder={i18n.t(\"globalSearch\")}/>\n                </span>\n            </div>\n        );\n    }\n\n    renderFooterGroup(amountClients) {\n        return (\n            <ColumnGroup>\n                <Row>\n                    <Column footer={i18n.t(\"activeClientsSummary\")} colSpan={4} footerStyle={{textAlign: 'right'}}/>\n                    <Column footer={amountClients} />\n                </Row>\n            </ColumnGroup>\n        );\n    }\n\n    renderToolbarButton() {\n        return (\n            <>\n                <Button label={i18n.t(\"kick\")} icon=\"pi pi-user-minus\" className=\"p-button-warning\"\n                        onClick={this.confirmKickClientsSelected}\n                        disabled={!this.state.selectedClients || !this.state.selectedClients.length} />\n                <div style={{marginLeft: \"0.5em\"}} />\n                <Button label={i18n.t(\"addToTheBlacklist\")} icon=\"pi pi-ban\" className=\"p-button-danger\"\n                        onClick={this.confirmAddBlacklistSelected}\n                        disabled={!this.state.selectedClients || !this.state.selectedClients.length} />\n            </>\n        );\n    }\n\n    render() {\n        const header = this.renderHeader();\n\n        return (\n            <div>\n                <Toast ref={(el) => this.toast = el} />\n                <Toolbar style={{border: \"none\", borderRadius: \"0px\"}} left={this.renderToolbarButton()}/>\n                <DataTable header={header}\n                           value={this.state.clients}\n                           totalRecords={this.state.totalRecords}\n                           footerColumnGroup={this.renderFooterGroup(this.state.amountClients)}\n                           selection={this.state.selectedClients}\n                           onSelectionChange={(e) => this.setState({selectedClients: e.value})}\n                           className=\"p-datatable-clients\"\n                           globalFilter={this.state.globalFilter}\n                           emptyMessage={i18n.t(\"clientsNotFound\")}\n                           dataKey=\"imei\"\n                           paginator={true}\n                           rows={10}\n                           rowsPerPageOptions={[10,25,50]}\n                           paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                           currentPageReportTemplate={i18n.t(\"from\") + \" {first} \" + i18n.t(\"to\") + \" {last} \" + i18n.t(\"of\") + \" {totalRecords}\"}\n                           rowHover\n                           responsive\n                           resizableColumns={true}>\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}/>\n                    <Column field=\"username\" header={i18n.t(\"username\")} sortable />\n                    <Column field=\"imei\" header={i18n.t(\"IMEIHash\")} sortable />\n                    <Column field=\"token.valid_to\" header={i18n.t(\"tokenValidTo\")} sortable/>\n                    <Column header={i18n.t(\"actions\")} body={this.renderButtons} style={{width: '20vw'}} />\n                </DataTable>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"kickClientQuestion\")}\n                                visible={this.state.kickClientDialog}\n                                onConfirm={this.kickClient}\n                                onCancel={this.hideKickClientDialog}\n                                onHide={this.hideKickClientDialog}/>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"kickClientsQuestion\")}\n                                visible={this.state.kickClientsDialogSelected}\n                                onConfirm={this.kickClientsSelected}\n                                onCancel={this.hideKickClientsDialogSelected}\n                                onHide={this.hideKickClientsDialogSelected}/>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"addClientBlacklistQuestion\")}\n                                visible={this.state.addBlacklistDialog}\n                                onConfirm={this.addBlacklist}\n                                onCancel={this.hideAddBlacklistDialog}\n                                onHide={this.hideAddBlacklistDialog}/>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"addClientsBlacklistQuestion\")}\n                                visible={this.state.addBlacklistDialogSelected}\n                                onConfirm={this.addBlacklistSelected}\n                                onCancel={this.hideAddBlacklistDialogSelected}\n                                onHide={this.hideAddBlacklistDialogSelected}/>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {Button} from 'primereact/button';\nimport 'primeicons/primeicons.css';\nimport {InputText} from \"primereact/inputtext\";\nimport {BlacklistService} from \"./BlacklistService\";\nimport {Toast} from \"primereact/toast\";\nimport {Toolbar} from \"primereact/toolbar\";\nimport {DialogQuestion} from \"./DialogQuestion\";\nimport {OverlayPanel} from \"primereact/overlaypanel\";\nimport {ProgressBar} from \"primereact/progressbar\";\nimport {ColumnGroup} from \"primereact/columngroup\";\nimport {Row} from \"primereact/row\";\nimport {appSettings} from \"./AppSettings\";\nimport i18n from \"i18next\";\n\nexport class DataTableBlacklist extends Component {\n\n    emptyClient = {\n        imei: null\n    };\n\n    emptyBlacklist = [];\n\n    visibility = {\n        hidden: \"hidden\",\n        visible: \"visible\"\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            removeBlacklistDialog : false,\n            removeBlacklistDialogSelected : false,\n            selectedClients: null,\n            selectedClient: this.emptyClient,\n            blacklist: this.emptyBlacklist,\n            addBlacklistImei: \"\",\n            removeBlacklistImei: \"\",\n            tagBlacklist: \"tag\",\n            addBlacklistLoading: this.visibility.hidden,\n            removeBlacklistLoading: this.visibility.hidden,\n            blacklistSize: 0\n        };\n        this.blacklistService = new BlacklistService();\n        this.renderRowButtons = this.renderRowButtons.bind(this);\n\n        this.hideRemoveBlacklistDialog = this.hideRemoveBlacklistDialog.bind(this);\n        this.hideRemoveBlacklistDialogSelected = this.hideRemoveBlacklistDialogSelected.bind(this);\n        this.removeBlacklist = this.removeBlacklist.bind(this);\n        this.removeBlacklistSelected = this.removeBlacklistSelected.bind(this);\n        this.confirmRemoveBlacklist = this.confirmRemoveBlacklist.bind(this);\n        this.confirmRemoveBlacklistSelected = this.confirmRemoveBlacklistSelected.bind(this);\n        this.confirmAddBlacklist = this.confirmAddBlacklist.bind(this);\n        this.confirmRemoveBlacklistOverlay = this.confirmRemoveBlacklistOverlay.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            let blacklist = await this.blacklistService.getBlacklist();\n            this.setState({\n                blacklist: blacklist,\n                blacklistSize: blacklist.length\n            })\n        } catch (e) {\n            console.log(`Blacklist request failed: ${e}`);\n        }\n    }\n\n    confirmRemoveBlacklistSelected() {\n        this.setState({removeBlacklistDialogSelected: true});\n    }\n\n    confirmRemoveBlacklist(client) {\n        this.setState({\n            selectedClient: client,\n            removeBlacklistDialog: true\n        });\n    }\n\n    async confirmAddBlacklist() {\n        this.setState({addBlacklistLoading: this.visibility.visible});\n\n        try {\n            let data = await this.blacklistService.addToBlacklist(this.state.addBlacklistImei);\n            let newBlacklist = this.state.blacklist;\n            newBlacklist.push({imei: data.imeilist[0]});\n\n            this.setState({\n                addBlacklistLoading: this.visibility.hidden,\n                blacklist: newBlacklist,\n                addBlacklistImei: \"\",\n                blacklistSize: newBlacklist.length\n            });\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: data.message, life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            let response = e.response.data;\n            console.log(response);\n            console.log(i18n.t(\"addBlacklistRequestFailed\") + response);\n            this.setState({\n                addBlacklistLoading: this.visibility.hidden\n            });\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE });\n        }\n    }\n\n    async confirmRemoveBlacklistOverlay() {\n        this.setState({removeBlacklistLoading: this.visibility.visible});\n\n        try {\n            let data = await this.blacklistService.removeFromBlacklist(this.state.removeBlacklistImei);\n            let blacklist = await this.blacklistService.getBlacklist();\n            this.setState({\n                blacklist: blacklist,\n                blacklistSize: blacklist.length,\n                removeBlacklistLoading: this.visibility.hidden,\n                removeBlacklistImei: \"\"\n            });\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: data.message, life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            let response = e.response.data;\n            console.log(response);\n            console.log(i18n.t(\"removeBlacklistRequestFailed\") + response);\n            this.setState({\n                removeBlacklistLoading: this.visibility.hidden\n            });\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: response.message, life: appSettings.TOAST_LIVE });\n        }\n    }\n\n    hideRemoveBlacklistDialogSelected() {\n        this.setState({ removeBlacklistDialogSelected: false });\n    }\n\n    hideRemoveBlacklistDialog() {\n        this.setState({ removeBlacklistDialog: false });\n    }\n\n    async removeBlacklistSelected() {\n        try {\n            let clients = this.state.blacklist.filter(client => !this.state.selectedClients.includes(client));\n            await this.blacklistService.removeFromBlacklist(this.state.selectedClients);\n\n            this.setState({\n                blacklist: clients,\n                removeBlacklistDialogSelected: false,\n                selectedClients: null\n            });\n\n            this.toast.show({severity: 'success', summary: i18n.t(\"successful\"), detail: i18n.t(\"removeClientsFromTheBlacklist\"),\n                life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            let response = e.response.data;\n            this.toast.show({severity: 'error', summary: i18n.t(\"error\"), detail: response === null ? `${e}` : response.message,\n                life: appSettings.TOAST_LIVE });\n\n            this.setState({\n                removeBlacklistDialogSelected: false,\n            });\n        }\n    }\n\n    async removeBlacklist() {\n        try {\n            await this.blacklistService.removeFromBlacklist(this.state.selectedClient.imei);\n            let clients = this.state.blacklist.filter(client => client.imei !== this.state.selectedClient.imei);\n            this.setState({\n                blacklist: clients,\n                removeBlacklistDialog: false,\n                blacklistSize: clients.length,\n                selectedClient: this.emptyClient\n            });\n\n            this.toast.show({ severity: 'success', summary: i18n.t(\"successful\"), detail: i18n.t(\"removeClientFromTheBlacklist\"), life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            console.log(`Remove blacklist request failed: ${e}`);\n            this.setState({\n                removeBlacklistDialog: false\n            });\n\n            this.toast.show({ severity: 'error', summary: i18n.t(\"error\"), detail: `${e}`, life: appSettings.TOAST_LIVE});\n        }\n    }\n\n    renderHeader() {\n        return (\n            <div style={{textAlign: \"left\"}}>\n                <span className=\"p-input-icon-left\">\n                    <i className=\"pi pi-search\"/>\n                    <InputText\n                        type=\"search\"\n                        onInput={ (e) => this.setState({globalFilter: e.target.value}) }\n                        placeholder={i18n.t(\"IMEIHashSearch\")}/>\n                </span>\n            </div>\n        );\n    }\n\n    renderRowButtons(rowData) {\n        const buttonStyle = {\n            marginLeft: \"0.5em\"\n        };\n\n        return (\n            <div>\n                <Button style={buttonStyle} type=\"button\" icon=\"pi pi-lock-open\" className=\"p-button-danger\"\n                        onClick={() => {this.confirmRemoveBlacklist(rowData)}}\n                        tooltip={i18n.t(\"removeFromTheBlacklistBtn\")}\n                        tooltipOptions={{position: \"top\"}}/>\n            </div>\n        );\n    }\n\n    renderToolbarButton() {\n        return (\n            <>\n                <Button label={i18n.t(\"add\")} icon=\"pi pi-ban\" className=\"p-button-success\"\n                        onClick={(e) => this.op.toggle(e)}/>\n                <OverlayPanel ref={(el) => this.op = el}>\n                    <div className=\"p-inputgroup\">\n                        <InputText placeholder={i18n.t(\"enterIMEIOrIMEIHash\")}\n                                   onInput={ (e) => this.setState({addBlacklistImei: e.target.value})}/>\n                        {/*<InputText placeholder=\"Enter Tag\"*/}\n                        {/*           onInput={ (e) => this.setState({tagBlacklist: e.target.value})}/>*/}\n                        <Button label={i18n.t(\"add\")} icon=\"pi pi-ban\" className=\"p-button-success\"\n                                disabled={(this.state.tagBlacklist && this.state.addBlacklistImei) === \"\"}\n                                onClick={this.confirmAddBlacklist}/>\n                    </div>\n                    <div style={{marginTop: \"0.2em\"}} />\n                    <ProgressBar mode=\"indeterminate\" style={{height: \"0.2em\", visibility: this.state.addBlacklistLoading}} />\n                </OverlayPanel>\n                <div style={{marginLeft: \"0.5em\"}} />\n                <Button label={i18n.t(\"remove\")} icon=\"pi pi-lock-open\" className=\"p-button-danger\"\n                        onClick={this.confirmRemoveBlacklistSelected} style={{borderRadius: \"3px 0px 0px 3px\"}}\n                        disabled={!this.state.selectedClients || !this.state.selectedClients.length} />\n                <Button label={i18n.t(\"\")} icon=\"pi pi-chevron-down\" style={{borderRadius: \"0px 3px 3px 0px\"}}\n                        className=\"p-button-danger\"\n                        onClick={(e) => this.opr.toggle(e)}/>\n                <OverlayPanel ref={(el) => this.opr = el}>\n                    <div className=\"p-inputgroup\">\n                        <InputText placeholder={i18n.t(\"enterIMEIOrIMEIHash\")}\n                                   onInput={ (e) => this.setState({removeBlacklistImei: e.target.value})}/>\n                        <Button label={i18n.t(\"remove\")} icon=\"pi pi-lock-open\" className=\"p-button-danger\"\n                                disabled={(this.state.tagBlacklist && this.state.removeBlacklistImei) === \"\"}\n                                onClick={this.confirmRemoveBlacklistOverlay}/>\n                    </div>\n                    <div style={{marginTop: \"0.2em\"}} />\n                    <ProgressBar mode=\"indeterminate\" style={{height: \"0.2em\", visibility: this.state.removeBlacklistLoading}} />\n                </OverlayPanel>\n            </>\n        );\n    }\n\n    renderFooterGroup(size) {\n        return (\n            <ColumnGroup>\n                <Row>\n                    <Column footer={i18n.t(\"blacklistSizeSummary\")} colSpan={2} footerStyle={{textAlign: 'right'}}/>\n                    <Column footer={size} />\n                </Row>\n            </ColumnGroup>\n        );\n    }\n\n    render() {\n        const header = this.renderHeader();\n        const btn = this.renderToolbarButton();\n\n        return (\n            <div>\n                <Toast ref={(el) => this.toast = el} />\n                <Toolbar style={{border: \"none\", borderRadius: \"0px\"}} left={btn}/>\n                <DataTable header={header}\n                           value={this.state.blacklist}\n                           footerColumnGroup={this.renderFooterGroup(this.state.blacklistSize)}\n                           selection={this.state.selectedClients}\n                           onSelectionChange={(e) => this.setState({selectedClients: e.value})}\n                           className=\"p-datatable-blacklist\"\n                           globalFilter={this.state.globalFilter}\n                           emptyMessage={i18n.t(\"IMEIHashNotFound\")}\n                           dataKey=\"imei\"\n                           paginator={true}\n                           rows={10}\n                           rowsPerPageOptions={[10,25,50]}\n                           paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                           currentPageReportTemplate={i18n.t(\"from\") + \" {first} \" + i18n.t(\"to\") + \" {last} \" + i18n.t(\"of\") + \" {totalRecords}\"}\n                           rowHover\n                           responsive\n                           resizableColumns={true}>\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}/>\n                    <Column field=\"imei\" header={i18n.t(\"IMEIHash\")} sortable />\n                    <Column header={i18n.t(\"actions\")} body={this.renderRowButtons} style={{width: '20vw'}} />\n                </DataTable>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"removeClientFromTheBlacklistQuestion\")}\n                                visible={this.state.removeBlacklistDialog}\n                                onConfirm={this.removeBlacklist}\n                                onCancel={this.hideRemoveBlacklistDialog}\n                                onHide={this.hideRemoveBlacklistDialog}/>\n\n                <DialogQuestion headerText={i18n.t(\"confirm\")} message={i18n.t(\"removeClientsFromTheBlacklistQuestion\")}\n                                visible={this.state.removeBlacklistDialogSelected}\n                                onConfirm={this.removeBlacklistSelected}\n                                onCancel={this.hideRemoveBlacklistDialogSelected}\n                                onHide={this.hideRemoveBlacklistDialogSelected}/>\n            </div>\n        );\n    }\n}\n","import API from './API';\n\nexport class DatasourceService {\n\n    async getDatasource() {\n        return (await API.get(\"/datasource\")).data;\n    }\n    \n    async changeDatasource(state) {\n        console.log(this.requestForm(state));\n\n        return (await API.put(\"/datasource\", this.requestForm(state))).data;\n    }\n\n    requestForm(state) {\n        return {\n            username: state.username,\n            password: state.password,\n            host: state.host,\n            port: state.port,\n            db_name: state.dbName,\n            db_type: state.dbType,\n            script_encoding: state.scriptEncoding,\n            driver_class_name: state.driverClassName,\n            additional: state.additional,\n            pool: {\n                auto_commit: state.autoCommit,\n                connection_timeout: state.connectionTimeout,\n                idle_timeout: state.idleTimeout,\n                max_life_time: state.maxLifeTime,\n                maximum_pool_size: state.maximumPoolSize\n            }\n        };\n    }\n}\n","\nexport function getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function setCookie(name, value, options = {}) {\n\n    options = {\n        path: '/',\n        ...options\n    };\n\n    if (options.expires instanceof Date) {\n        options.expires = options.expires.toUTCString();\n    }\n\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n    for (let optionKey in options) {\n        updatedCookie += \"; \" + optionKey;\n        let optionValue = options[optionKey];\n        if (optionValue !== true) {\n            updatedCookie += \"=\" + optionValue;\n        }\n    }\n\n    document.cookie = updatedCookie;\n}\n","import i18n from \"i18next\";\nimport {getCookie, setCookie} from \"./CookiesUtils\";\n\nexport const languages = [\n    { lng: 'English', code: 'en' },\n    { lng: 'Русский', code: 'ru' }\n];\n\nexport function getEncodingLocation(lang) {\n    if(lang === \"ru\")\n        return [\n            {\n                name: \"Cp437\",\n                aliases: \"437, IBM437\",\n                lang: \"Английский\"\n            },\n            {\n                name: \"Cp850\",\n                aliases: \"850, IBM850\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"Cp852\",\n                aliases: \"852, IBM852\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"Cp855\",\n                aliases: \"855, IBM855\",\n                lang: \"Кириллица\"\n            },\n            {\n                name: \"Cp866\",\n                aliases: \"866, IBM866\",\n                lang: \"Русский\"\n            },\n            {\n                name: \"windows-1250\",\n                aliases: \"Cp1250 cp1250\",\n                lang: \"Восточно-Европейский\"\n            },\n            {\n                name: \"windows-1251\",\n                aliases: \"Cp1250 cp1250\",\n                lang: \"Кириллица\"\n            },\n            {\n                name: \"windows-1252\",\n                aliases: \"Cp1252 cp1252\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"ISO-8859-1\",\n                aliases: \"ISO8859_1 l1\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"ISO-8859-2\",\n                aliases: \"ISO8859_2 l2\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"ISO-8859-5\",\n                aliases: \"ISO8859_5 cyrillic\",\n                lang: \"Кириллица\"\n            },\n            {\n                name: \"ISO8859_15\",\n                aliases: \"ISO8859_15 LATIN9\",\n                lang: \"Латынь\"\n            },\n            {\n                name: \"KOI8_R\",\n                aliases: \"KOI8_R koi8_r koi8\",\n                lang: \"Русский\"\n            },\n            {\n                name: \"KOI8_U\",\n                aliases: \"KOI8_U koi8_u\",\n                lang: \"Украинский\"\n            },\n            {\n                name: \"UTF-8\",\n                aliases: \"UTF-8, U8, utf8\",\n                lang: \"Все языки\"\n            },\n            {\n                name: \"UTF-16\",\n                aliases: \"UTF_16 unicode utf16\",\n                lang: \"Все языки\"\n            },\n            {\n                name: \"UTF-32\",\n                aliases: \"UTF_32 UTF32\",\n                lang: \"Все языки\"\n            },\n        ];\n    else\n        return [\n            {\n                name: \"Cp437\",\n                aliases: \"437, IBM437\",\n                lang: \"English\"\n            },\n            {\n                name: \"Cp850\",\n                aliases: \"850, IBM850\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"Cp852\",\n                aliases: \"852, IBM852\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"Cp855\",\n                aliases: \"855, IBM855\",\n                lang: \"Cyrillic\"\n            },\n            {\n                name: \"Cp866\",\n                aliases: \"866, IBM866\",\n                lang: \"Russian\"\n            },\n            {\n                name: \"windows-1250\",\n                aliases: \"Cp1250 cp1250\",\n                lang: \"Eastern European\"\n            },\n            {\n                name: \"windows-1251\",\n                aliases: \"Cp1250 cp1250\",\n                lang: \"Cyrillic\"\n            },\n            {\n                name: \"windows-1252\",\n                aliases: \"Cp1252 cp1252\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"ISO-8859-1\",\n                aliases: \"ISO8859_1 l1\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"ISO-8859-2\",\n                aliases: \"ISO8859_2 l2\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"ISO-8859-5\",\n                aliases: \"ISO8859_5 cyrillic\",\n                lang: \"Cyrillic\"\n            },\n            {\n                name: \"ISO8859_15\",\n                aliases: \"ISO8859_15 LATIN9\",\n                lang: \"Latin\"\n            },\n            {\n                name: \"KOI8_R\",\n                aliases: \"KOI8_R koi8_r koi8\",\n                lang: \"Russian\"\n            },\n            {\n                name: \"KOI8_U\",\n                aliases: \"KOI8_U koi8_u\",\n                lang: \"Ukrainian\"\n            },\n            {\n                name: \"UTF-8\",\n                aliases: \"UTF-8, U8, utf8\",\n                lang: \"All Languages\"\n            },\n            {\n                name: \"UTF-16\",\n                aliases: \"UTF_16 unicode utf16\",\n                lang: \"All Languages\"\n            },\n            {\n                name: \"UTF-32\",\n                aliases: \"UTF_32 UTF32\",\n                lang: \"All Languages\"\n            },\n        ];\n}\n\nexport function getCalendarLocation(lang) {\n    if(lang === \"ru\") {\n        return {\n            firstDayOfWeek: 1,\n            dayNames: [\"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\", \"Воскресенье\"],\n            dayNamesShort: [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"],\n            dayNamesMin: [\"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\", \"В\"],\n            monthNames: [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"],\n            monthNamesShort: [\"Янв\", \"Фев\", \"Мар\", \"Апр\", \"Май\", \"Июн\", \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Нов\", \"Дек\"],\n            today: \"Сегодня\",\n            clear: \"Очистить\",\n            weekHeader: \"Нд\"\n        };\n    } else return {\n        firstDayOfWeek: 0,\n        dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        dayNamesMin: [\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\n        monthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ],\n        monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ],\n        today: 'Today',\n        clear: 'Clear',\n        weekHeader: 'Wk'\n    }\n}\n\nconst resources = {\n    en: {\n        translation: {\n            \"clients\": \"Clients\",\n            \"kick\": \"Kick\",\n            \"addToTheBlacklist\": \"Add to the blacklist\",\n            \"globalSearch\": \"Global Search\",\n            \"username\": \"Username\",\n            \"IMEIHash\": \"IMEI Hash\",\n            \"tokenValidTo\": \"Token Valid To\",\n            \"actions\": \"Actions\",\n            \"clientsNotFound\": \"Clients not found\",\n            \"activeClientsSummary\": \"Active clients:\",\n            \"from\": \"\",\n            \"to\": \"to\",\n            \"of\": \"of\",\n            \"blacklist\": \"Blacklist\",\n            \"add\": \"Add\",\n            \"remove\": \"Remove\",\n            \"IMEIHashSearch\": \"IMEI Hash Search\",\n            \"IMEIHashNotFound\": \"IMEI Hash not found\",\n            \"blacklistSizeSummary\": \"Blacklist size:\",\n            \"logs\": \"Logs\",\n            \"type\": \"Type\",\n            \"message\": \"Message\",\n            \"selectAType\": \"Type\",\n            \"searchByMessage\": \"Search by Message\",\n            \"logsNotFound\": \"Logs not found\",\n            \"recordsSummary\": \"Records:\",\n            \"datasource\": \"Datasource\",\n            \"connection\": \"Connection\",\n            \"password\": \"Password\",\n            \"host\": \"Host\",\n            \"port\": \"Port\",\n            \"databaseName\": \"Database Name\",\n            \"databaseType\": \"Database Type\",\n            \"scriptEncoding\": \"Script Encoding\",\n            \"driverClassName\": \"Driver Class Name\",\n            \"additional\": \"Additional\",\n            \"pool\": \"Pool\",\n            \"autoCommit\": \"Auto Commit\",\n            \"autoCommitHint\": \"Controls the default auto-commit behavior of connections returned from the pool\",\n            \"connectionTimeout\": \"Connection Timeout\",\n            \"connectionTimeoutHint\": \"Controls the maximum number of milliseconds that a client will wait for a connection from the pool. Lowest acceptable connection timeout is 250 ms\",\n            \"idleTimeout\": \"Idle Timeout\",\n            \"idleTimeoutHint\": \"Controls the maximum amount of time that a connection is allowed to sit idle in the pool. A value of 0 means that idle connections are never removed from the pool. The minimum allowed value is 10000ms (10 seconds)\",\n            \"maxLifeTime\": \"Max Life Time\",\n            \"maxLifeTimeHint\": \"Controls the maximum lifetime of a connection in the pool. A value of 0 indicates no maximum lifetime (infinite lifetime), subject of course to the idleTimeout setting. The minimum allowed value is 30000ms (30 seconds)\",\n            \"maximumPoolSize\": \"Maximum Pool Size\",\n            \"maximumPoolSizeHint\": \"Controls the maximum size that the pool is allowed to reach, including both idle and in-use connections. Basically this value will determine the maximum number of actual connections to the database backend\",\n            \"applyChangesBtn\": \"Apply Changes\",\n            \"reset\": \"Reset\",\n            \"clientTimeoutValue\": \"Client Timeout, days\",\n            \"clientTimeoutValueHint\": \"Value '0' means no timeout.\",\n            \"other\": \"Other\",\n            \"language\": \"Language\",\n            \"languagePlaceholder\": \"Select a language\",\n            \"restart\": \"Restart\",\n            \"restartPage\": \"Restart page required\",\n            \"settings\": \"Settings\",\n            \"successful\": \"Successful\",\n            \"error\": \"Error\",\n            \"kickRequestFailed\": \"Kick client request failed: \",\n            \"addedClientsToTheBlacklist\": \"Clients added to the blacklist\",\n            \"confirm\": \"Confrirm\",\n            \"kickClientQuestion\": \"Are you sure want to kick this client?\",\n            \"kickClientsQuestion\": \"Are you sure want to kick the selected clients?\",\n            \"addClientBlacklistQuestion\": \"Are you sure want to add this client to the blacklist?\",\n            \"addClientsBlacklistQuestion\": \"Are you sure want to add selected clients to the blacklist?\",\n            \"addBlacklistRequestFailed\": \"Add blacklist request failed: \",\n            \"removeClientsFromTheBlacklist\": \"Clients removed from the blacklist\",\n            \"removeClientFromTheBlacklist\": \"Client removed from the blacklist\",\n            \"removeFromTheBlacklistBtn\": \"Remove from the blacklist\",\n            \"enterIMEIOrIMEIHash\": \"Enter IMEI or IMEI Hash\",\n            \"removeClientsFromTheBlacklistQuestion\": \"Are you sure want to remove the selected clients from the blacklist?\",\n            \"removeClientFromTheBlacklistQuestion\": \"Are you sure want to remove this client from the blacklist?\",\n            \"removeByIMEI\": \"Remove by IMEI\",\n            \"logDateSearch\": \"Search by Date\",\n            \"pickADate\": \"Pick a date\",\n            \"restartTime\": \"Restart in\",\n            \"restartTimeSec\": \" seconds\"\n        }\n    },\n    ru: {\n        translation: {\n            \"clients\": \"Клиенты\",\n            \"kick\": \"Исключить\",\n            \"addToTheBlacklist\": \"Добавить в ЧС\",\n            \"globalSearch\": \"Глобальный поиск\",\n            \"username\": \"Имя Пользователя\",\n            \"IMEIHash\": \"Хэш IMEI\",\n            \"tokenValidTo\": \"Токен: годен до\",\n            \"actions\": \"Действия\",\n            \"clientsNotFound\": \"Клиенты не найдены\",\n            \"activeClientsSummary\": \"Активных клиентов:\",\n            \"from\": \"c\",\n            \"to\": \"по\",\n            \"of\": \"из\",\n            \"blacklist\": \"Черный список\",\n            \"add\": \"Добавить\",\n            \"remove\": \"Удалить\",\n            \"IMEIHashSearch\": \"Поиск Хэш IMEI\",\n            \"IMEIHashNotFound\": \"Хэш IMEI не найден\",\n            \"blacklistSizeSummary\": \"Клиентов в черном списке:\",\n            \"logs\": \"Логи\",\n            \"type\": \"Тип\",\n            \"message\": \"Сообщение\",\n            \"selectAType\": \"Тип\",\n            \"searchByMessage\": \"Поиск по сообщению\",\n            \"logsNotFound\": \"Логи не найдены\",\n            \"recordsSummary\": \"Записей:\",\n            \"datasource\": \"Источник данных\",\n            \"connection\": \"Соединение\",\n            \"password\": \"Пароль\",\n            \"host\": \"Хост\",\n            \"port\": \"Порт\",\n            \"databaseName\": \"Имя Базы Данных\",\n            \"databaseType\": \"Тип Базы Данных\",\n            \"scriptEncoding\": \"Кодировка Скрипта\",\n            \"driverClassName\": \"Имя драйвера класса\",\n            \"additional\": \"Дополнительно\",\n            \"pool\": \"Пул\",\n            \"autoCommit\": \"Авто Коммит\",\n            \"autoCommitHint\": \"Управляет поведением автоматической фиксации по умолчанию для подключений, возвращаемых с пула\",\n            \"connectionTimeout\": \"Тайм-аут соединения\",\n            \"connectionTimeoutHint\": \"Управляет максимальным количеством миллисекунд, в течение которых клиент будет ожидать подключение из пула. Минимальное допустимое время ожидания соединения составляет 250 мс.\",\n            \"idleTimeout\": \"Время простоя\",\n            \"idleTimeoutHint\": \"Управляет максимальным временем, в течение которого соединение может простаивать в пуле. Значение 0 означает, что неактивные соединения никогда не удаляются из пула. Минимально допустимое значение - 10000 мс (10 секунд).\",\n            \"maxLifeTime\": \"Максимальное время жизни\",\n            \"maxLifeTimeHint\": \"Управляет максимальным временем жизни соединения в пуле. Значение 0 указывает на отсутствие максимального времени жизни (бесконечное время жизни), с учетом настройки времени простоя. Минимально допустимое значение - 30000 мс (30 секунд).\",\n            \"maximumPoolSize\": \"Максимальный размер пула\",\n            \"maximumPoolSizeHint\": \"Управляет максимальным размером, который может достигать пул, включая как незанятые, так и используемые соединения. Обычно это значение определяет максимальное количество фактических подключений к бэкэнду базы данных.\",\n            \"applyChangesBtn\": \"Применить изменения\",\n            \"reset\": \"Сбросить\",\n            \"clientTimeoutValue\": \"Тайм-аут клиента, в днях\",\n            \"clientTimeoutValueHint\": \"Значение '0' означает отсутствие тайм-аута.\",\n            \"other\": \"Другое\",\n            \"language\": \"Язык\",\n            \"languagePlaceholder\": \"Выберите язык\",\n            \"restart\": \"Перезагрузка\",\n            \"restartPage\": \"Требуются обновить страницу\",\n            \"settings\": \"Настройки\",\n            \"successful\": \"Успех\",\n            \"error\": \"Ошибка\",\n            \"kickRequestFailed\": \"Ошибка исключения клиента: \",\n            \"addedClientsToTheBlacklist\": \"Клиенты добавлены в черный список\",\n            \"confirm\": \"Подтвердить\",\n            \"kickClientQuestion\": \"Вы уверены, что хотите исключить выбранного клиента?\",\n            \"kickClientsQuestion\": \"Вы уверены, что хотите исключить выбранных клиентов?\",\n            \"addClientBlacklistQuestion\": \"Вы уверены, что хотите добавить выбранного клиента в черный список?\",\n            \"addClientsBlacklistQuestion\": \"Вы уверены, что хотите добавить выбранных клиентов в черный список?\",\n            \"addBlacklistRequestFailed\": \"Ошибка запроса черного списка: \",\n            \"removeClientsFromTheBlacklist\": \"Клиенты удалены из черного списка\",\n            \"removeClientFromTheBlacklist\": \"Клиент удален из черного списка\",\n            \"removeFromTheBlacklistBtn\": \"Удалить из ЧС\",\n            \"enterIMEIOrIMEIHash\": \"Введите IMEI или Хэш IMEI\",\n            \"removeClientsFromTheBlacklistQuestion\": \"Вы уверены, что хотите удалить выбранных клиентов из черного списка?\",\n            \"removeClientFromTheBlacklistQuestion\": \"Вы уверены, что хотите удалить выбранного клиента из черного списка?\",\n            \"logDateSearch\": \"Поиск по Дате\",\n            \"pickADate\": \"Выберите дату\",\n            \"restartTime\": \"Перезагрузка через\",\n            \"restartTimeSec\": \" секунд\"\n        }\n    }\n};\n\nexport function changeLanguage(lang) {\n    i18n.changeLanguage(lang);\n    setCookie(\"lang\", lang);\n}\n\nexport function initLanguage(lang) {\n    i18n.init({\n        resources,\n        lng: lang\n    });\n}\n\nexport function getLanguage() {\n    if(getCookie(\"lang\") === undefined) {\n        setCookie(\"lang\", \"en\");\n    }\n    return getCookie(\"lang\");\n}","import React, {Component} from 'react';\nimport {Password} from \"primereact/password\";\nimport {Button} from \"primereact/button\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport {InputText} from \"primereact/inputtext\";\nimport {DatasourceService} from \"../service/DatasourceService\";\nimport {Toast} from \"primereact/toast\";\nimport _ from \"lodash\";\nimport {appSettings} from \"./AppSettings\";\nimport {InputTextarea} from \"primereact/inputtextarea\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport {Tooltip} from \"primereact/tooltip\"\nimport i18n from \"i18next\";\nimport {AutoComplete} from \"primereact/autocomplete\";\nimport {getEncodingLocation} from \"../utils/Translate\";\nimport {dbType} from \"./InnerData\";\n\nexport class DatasourceView extends Component {\n\n    propsType = {\n        username: \"username\",\n        password: \"password\",\n        host: \"host\",\n        port: \"port\",\n        dbName: \"dbName\",\n        dbType: \"dbType\",\n        scriptEncoding: \"scriptEncoding\",\n        driverClassName: \"driverClassName\",\n        additional: \"additional\",\n        autoCommit: \"autoCommit\",\n        connectionTimeout: \"connectionTimeout\",\n        idleTimeout: \"idleTimeout\",\n        maxLifeTime: \"maxLifeTime\",\n        maximumPoolSize: \"maximumPoolSize\",\n        filteredEncodings: \"filteredEncodings\",\n        filteredDbTypes: \"filteredDbTypes\",\n        filteredDriverName: \"filteredDriverName\"\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            host: \"\",\n            port: 0,\n            dbName: \"\",\n            dbType: \"\",\n            scriptEncoding: \"\",\n            driverClassName: \"\",\n            additional: \"\",\n            disabledApply: true,\n            disabledReset: true,\n            autoCommit: true,\n            connectionTimeout: 0,\n            idleTimeout: 0,\n            maximumPoolSize: 0,\n            encodings: [],\n            databases: [],\n            filteredEncodings: null,\n            filteredDbTypes: null,\n            filteredDriverName: null,\n\n            current: {\n                username: \"\",\n                password: \"\",\n                host: \"\",\n                port: 0,\n                dbName: \"\",\n                dbType: \"\",\n                scriptEncoding: \"\",\n                driverClassName: \"\",\n                additional: \"\",\n\n                autoCommit: true,\n                connectionTimeout: 0,\n                idleTimeout: 0,\n                maxLifeTime: 0,\n                maximumPoolSize: 0\n            }\n        };\n\n        this.datasourceService = new DatasourceService();\n\n        this.changeDatasource = this.changeDatasource.bind(this);\n        this.changeState = this.changeState.bind(this);\n        this.checkApply = this.checkApply.bind(this);\n        this.checkProp = this.checkProp.bind(this);\n        this.reset = this.reset.bind(this);\n        this.searchEncoding = this.searchEncoding.bind(this);\n        this.scriptEncodingAutoCompleteTemplate = this.scriptEncodingAutoCompleteTemplate.bind(this);\n        this.dbTypeAutoCompleteTemplate = this.dbTypeAutoCompleteTemplate.bind(this);\n        this.driverNameAutoCompleteTemplate = this.driverNameAutoCompleteTemplate.bind(this);\n        this.cardTemplate = this.cardTemplate.bind(this);\n        this.searchDriverName = this.searchDriverName.bind(this);\n        this.searchDbType = this.searchDbType.bind(this);\n    }\n\n    async componentDidMount() {\n        this.datasourceService.getDatasource().then(data => {\n            this.setState({\n                username: data.username,\n                password: data.password,\n                host: data.host,\n                port: data.port,\n                dbName: data[\"db_name\"],\n                dbType: data[\"db_type\"],\n                scriptEncoding: data[\"script_encoding\"],\n                driverClassName: data[\"driver_class_name\"],\n                additional: data.additional,\n                autoCommit: data.pool[\"auto_commit\"],\n                connectionTimeout: data.pool[\"connection_timeout\"],\n                idleTimeout: data.pool[\"idle_timeout\"],\n                maxLifeTime: data.pool[\"max_life_time\"],\n                maximumPoolSize: data.pool[\"maximum_pool_size\"],\n                encodings: getEncodingLocation(this.props.lang),\n                databases: dbType(),\n\n                current: {\n                    username: data.username,\n                    password: data.password,\n                    host: data.host,\n                    port: data.port,\n                    dbName: data[\"db_name\"],\n                    dbType: data[\"db_type\"],\n                    scriptEncoding: data[\"script_encoding\"],\n                    driverClassName: data[\"driver_class_name\"],\n                    additional: data.additional,\n\n                    autoCommit: data.pool[\"auto_commit\"],\n                    connectionTimeout: data.pool[\"connection_timeout\"],\n                    idleTimeout: data.pool[\"idle_timeout\"],\n                    maxLifeTime: data.pool[\"max_life_time\"],\n                    maximumPoolSize: data.pool[\"maximum_pool_size\"]\n                }\n            });\n        });\n    }\n\n    async changeDatasource() {\n        try {\n            let data = await this.datasourceService.changeDatasource(this.state);\n\n            this.setState({\n                disabledApply: true,\n                disabledReset: true,\n                current: {\n                    username: this.state.username,\n                    password: this.state.password,\n                    host: this.state.host,\n                    port: this.state.port,\n                    dbName: this.state.dbName,\n                    dbType: this.state.dbType,\n                    scriptEncoding: this.state.scriptEncoding,\n                    driverClassName: this.state.driverClassName,\n                    additional: this.state.additional,\n\n                    autoCommit: this.state.autoCommit,\n                    connectionTimeout: this.state.connectionTimeout,\n                    idleTimeout: this.state.idleTimeout,\n                    maxLifeTime: this.state.maxLifeTime,\n                    maximumPoolSize: this.state.maximumPoolSize,\n                }\n            });\n\n            this.props.restart();\n            this.toast.show({ severity: 'success', summary: 'Successful', detail: data.message, life: appSettings.TOAST_LIVE });\n        } catch (e) {\n            let response = \"\";\n            try {\n                response = e.response.data;\n            } catch (e1) {\n                response = e;\n            }\n\n            let message = \"Internal Server Error. :(\";\n            try {\n                if (response.message != null)\n                    message = response.message;\n            } catch (e) {}\n            console.log(\"Change datasource failed: \" + response);\n            this.toast.show({\n                severity: 'error',\n                summary: 'Error',\n                detail: message,\n                life: appSettings.TOAST_LIVE\n            });\n        }\n    }\n\n    changeState(chState, type, value) {\n        let disabled = this.checkApply(type, value);\n        chState.disabledApply = disabled;\n        chState.disabledReset = disabled;\n        this.setState(chState);\n    }\n\n    checkProp(currentType, propType, value, defaultValue) {\n        if (typeof value === \"boolean\") {\n            if(currentType === propType)\n                return value;\n        }\n\n        return currentType === propType ? value : defaultValue;\n    }\n\n    checkApply(type, value) {\n        if (typeof value === \"string\") {\n            if (value === \"\")\n                return true;\n        } else if (typeof value === \"number\") {\n            if (value <= 0)\n                return true;\n        }\n\n        let newProps = {\n            username: \"\",\n            password: \"\",\n            host: \"\",\n            port: 0,\n            dbName: \"\",\n            dbType: \"\",\n            scriptEncoding: \"\",\n            driverClassName: \"\",\n            additional: \"\",\n            autoCommit: true,\n            connectionTimeout: 0,\n            idleTimeout: 0,\n            maxLifeTime: 0,\n            maximumPoolSize: 0\n        };\n\n        newProps.username = this.checkProp(type, this.propsType.username, value, this.state.username);\n        newProps.password = this.checkProp(type, this.propsType.password, value, this.state.password);\n        newProps.host = this.checkProp(type, this.propsType.host, value, this.state.host);\n        newProps.port = this.checkProp(type, this.propsType.port, value, this.state.port);\n        newProps.dbName = this.checkProp(type, this.propsType.dbName, value, this.state.dbName);\n        newProps.dbType = this.checkProp(type, this.propsType.dbType, value, this.state.dbType);\n        newProps.scriptEncoding = this.checkProp(type, this.propsType.scriptEncoding, value, this.state.scriptEncoding);\n        newProps.driverClassName = this.checkProp(type, this.propsType.driverClassName, value, this.state.driverClassName);\n        newProps.additional = this.checkProp(type, this.propsType.additional, value, this.state.additional);\n        newProps.autoCommit = this.checkProp(type, this.propsType.autoCommit, value, this.state.autoCommit);\n        newProps.connectionTimeout = this.checkProp(type, this.propsType.connectionTimeout, value, this.state.connectionTimeout);\n        newProps.idleTimeout = this.checkProp(type, this.propsType.idleTimeout, value, this.state.idleTimeout);\n        newProps.maxLifeTime = this.checkProp(type, this.propsType.maxLifeTime, value, this.state.maxLifeTime);\n        newProps.maximumPoolSize = this.checkProp(type, this.propsType.maximumPoolSize, value, this.state.maximumPoolSize);\n\n        return _.isEqual(newProps, this.state.current);\n    }\n\n    reset() {\n        this.setState({\n            username: this.state.current.username,\n            password: this.state.current.password,\n            host: this.state.current.host,\n            port: this.state.current.port,\n            dbName: this.state.current.dbName,\n            dbType: this.state.current.dbType,\n            scriptEncoding: this.state.current.scriptEncoding,\n            driverClassName: this.state.current.driverClassName,\n            additional: this.state.current.additional,\n\n            autoCommit: this.state.current.autoCommit,\n            connectionTimeout: this.state.current.connectionTimeout,\n            idleTimeout: this.state.current.idleTimeout,\n            maxLifeTime: this.state.current.maxLifeTime,\n            maximumPoolSize: this.state.current.maximumPoolSize,\n\n            disabledApply: true,\n            disabledReset: true\n        });\n    }\n\n    searchEncoding(event) {\n        this.autoSearch(event, this.state.encodings, this.propsType.filteredEncodings, \"name\");\n    }\n\n    searchDriverName(event) {\n        this.autoSearch(event, this.state.databases, this.propsType.filteredDriverName, \"driver\");\n    }\n\n    searchDbType(event) {\n        this.autoSearch(event, this.state.databases, this.propsType.filteredDbTypes, \"name\");\n    }\n\n    autoSearch(event, data, filteredType, elementType) {\n        setTimeout(() => {\n            let filtered;\n            if(!event.query.trim().length) {\n                filtered = [...data];\n            } else {\n                filtered = data.filter((enc) => {\n                    return enc[elementType].toLowerCase().startsWith(event.query.toLowerCase());\n                });\n            }\n\n            let result = {};\n            result[filteredType] = filtered;\n            this.setState(result);\n        }, 250)\n    }\n\n    scriptEncodingAutoCompleteTemplate(item) {\n        return (\n            <div>\n                <span className=\"p-card\" style={{padding: \"0.3em\"}}>{item.name}</span>\n                <span style={{marginLeft: \"0.2em\"}}/>\n                <span className=\"p-card\" style={{padding: \"0.3em\"}}>{item.lang}</span>\n            </div>\n        );\n    }\n\n    dbTypeAutoCompleteTemplate(item) {\n        return this.cardTemplate(item.name)\n    }\n\n    driverNameAutoCompleteTemplate(item) {\n        return this.cardTemplate(item.driver);\n    }\n\n    cardTemplate(data) {\n        return (\n            <div>\n                <span className=\"p-card\" style={{padding: \"0.3em\"}}>{data}</span>\n            </div>\n        );\n    }\n\n    render() {\n        return (<>\n            <Toast ref={(el) => this.toast = el} />\n            <Fieldset legend={i18n.t(\"datasource\")} style={{marginTop: \"1em\"}}>\n                <div className=\"p-grid\">\n                    <div className=\"p-col-12 p-md-6\">\n                        <Fieldset legend={i18n.t(\"connection\")} style={{marginTop: \"1em\"}}>\n                            <div className=\"p-grid p-dir-col\">\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"username\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"username\")}</label>\n                                    <InputText value={this.state.username} autoComplete=\"off\" id=\"username\" className=\"p-d-block\"\n                                               onChange={(e) => {\n                                                   this.changeState(\n                                                       {username: e.target.value, disabledApply: true, disabledReset: true},\n                                                       this.propsType.username, e.target.value); }}\n                                               style={{width: \"100%\"}}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"password\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"password\")}</label>\n                                    <Password value={this.state.password} id=\"password\" className=\"p-d-block\"\n                                              onChange={(e) => {\n                                                  this.changeState(\n                                                      {password: e.target.value, disabledApply: true, disabledReset: true},\n                                                      this.propsType.password, e.target.value); }}\n                                              style={{width: \"100%\"}}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"host\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"host\")}</label>\n                                    <InputText value={this.state.host} id=\"host\" className=\"p-d-block\" style={{width: \"100%\"}}\n                                               onChange={(e) => {\n                                                   this.changeState(\n                                                       {host: e.target.value, disabledApply: true, disabledReset: true},\n                                                       this.propsType.host, e.target.value); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"port\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"port\")}</label>\n                                    <InputText id=\"port\" value={this.state.port} style={{width: \"100%\"}}\n                                               onChange={(e) => {\n                                                   let newPort = parseInt(e.target.value, 10);\n                                                   newPort = isNaN(newPort) ? 0: newPort;\n                                                   this.changeState(\n                                                       {port: newPort, disabledApply: true, disabledReset: true},\n                                                       this.propsType.port, newPort); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"dbName\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"databaseName\")}</label>\n                                    <InputText value={this.state.dbName} id=\"dbName\" className=\"p-d-block\" style={{width:\"100%\"}}\n                                               onChange={(e) => {\n                                                   this.changeState(\n                                                       {dbName: e.target.value, disabledApply: true, disabledReset: true},\n                                                       this.propsType.dbName, e.target.value); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"dbType\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"databaseType\")}</label>\n                                    <AutoComplete value={this.state.dbType} id=\"dbType\" style={{width:\"100%\"}}\n                                                  suggestions={this.state.filteredDbTypes}\n                                                  completeMethod={this.searchDbType}\n                                                  dropdown\n                                                  itemTemplate={this.dbTypeAutoCompleteTemplate}\n                                                  field=\"name\"\n                                                  onChange={(e) => {\n                                                      let value = e.target.value.name;\n                                                      if(value === undefined)\n                                                          value = e.target.value;\n                                                      this.changeState(\n                                                          {dbType: value, disabledApply: true, disabledReset: true},\n                                                          this.propsType.dbType, value); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"scriptEncoding\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"scriptEncoding\")}</label>\n                                    <AutoComplete value={this.state.scriptEncoding} id=\"scriptEncoding\" style={{width:\"100%\"}}\n                                                  suggestions={this.state.filteredEncodings}\n                                                  completeMethod={this.searchEncoding}\n                                                  dropdown\n                                                  itemTemplate={this.scriptEncodingAutoCompleteTemplate}\n                                                  field=\"name\"\n                                                  onChange={(e) => {\n                                                      let value = e.target.value.name;\n                                                      if(value === undefined)\n                                                          value = e.target.value;\n                                                      this.changeState(\n                                                          {scriptEncoding: value, disabledApply: true, disabledReset: true},\n                                                          this.propsType.scriptEncoding, value); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"driverClassName\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"driverClassName\")}</label>\n                                    <AutoComplete value={this.state.driverClassName} id=\"driverClassName\" style={{width:\"100%\"}}\n                                                  suggestions={this.state.filteredDriverName}\n                                                  completeMethod={this.searchDriverName}\n                                                  dropdown\n                                                  itemTemplate={this.driverNameAutoCompleteTemplate}\n                                                  field=\"driver\"\n                                                  onChange={(e) => {\n                                                      let value = e.target.value.driver;\n                                                      if(value === undefined)\n                                                          value = e.target.value;\n                                                      this.changeState(\n                                                          {driverClassName: value, disabledApply: true, disabledReset: true},\n                                                          this.propsType.driverClassName, value); }}/>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"additional\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"additional\")}</label>\n                                    <InputTextarea value={this.state.additional} id=\"additional\" autoResize className=\"p-d-block\" style={{width:\"100%\"}}\n                                                   onChange={(e) => {\n                                                       this.changeState(\n                                                           {additional: e.target.value, disabledApply: true, disabledReset: true},\n                                                           this.propsType.additional, e.target.value); }}/>\n                                </div>\n                            </div>\n                        </Fieldset>\n                    </div>\n                    <div className=\"p-col-12 p-md-6\">\n                        <Fieldset legend={i18n.t(\"pool\")} style={{marginTop: \"1em\"}}>\n                            <div className=\"p-grid p-dir-col\">\n                                <div className=\"p-col\">\n                                    <div className=\"p-field-checkbox\">\n                                        <Checkbox inputId=\"autoCommitCheckbox\" checked={this.state.autoCommit}\n                                                  onChange={(e) => {\n                                                      this.changeState(\n                                                          {autoCommit: e.checked, disabledApply: true, disabledReset: true},\n                                                          this.propsType.autoCommit, e.checked); }}/>\n                                        <label htmlFor=\"autoCommitCheckbox\">{i18n.t(\"autoCommit\")}</label>\n                                        <Tooltip target=\".autoCommitQuestion\"/>\n                                        <span className=\"pi pi-question autoCommitQuestion\"\n                                              style={{marginLeft: \"0.5em\", fontSize: \"0.8em\"}}\n                                              data-pr-tooltip={i18n.t(\"autoCommitHint\")}/>\n                                    </div>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"connectionTimeout\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"connectionTimeout\")}</label>\n                                    <div className=\"p-field-checkbox\">\n                                        <InputText id=\"connectionTimeout\" value={this.state.connectionTimeout} style={{width: \"100%\"}}\n                                                   onChange={(e) => {\n                                                       let newConnectionTimeout = parseInt(e.target.value, 10);\n                                                       newConnectionTimeout = isNaN(newConnectionTimeout) ? 0: newConnectionTimeout;\n                                                       this.changeState(\n                                                           {connectionTimeout: newConnectionTimeout, disabledApply: true, disabledReset: true},\n                                                           this.propsType.connectionTimeout, newConnectionTimeout); }}/>\n                                        <Tooltip target=\".connTout\" position=\"top\"/>\n                                        <span className=\"pi pi-question connTout\"\n                                              style={{marginLeft: \"0.5em\", fontSize: \"0.8em\"}}\n                                              data-pr-tooltip={i18n.t(\"connectionTimeoutHint\")}/>\n                                    </div>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"idleTimeout\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"idleTimeout\")}</label>\n                                    <div className=\"p-field-checkbox\">\n                                        <InputText id=\"idleTimeout\" value={this.state.idleTimeout} style={{width: \"100%\"}}\n                                               onChange={(e) => {\n                                                   let newIdleTimeout = parseInt(e.target.value, 10);\n                                                   newIdleTimeout = isNaN(newIdleTimeout) ? 0: newIdleTimeout;\n                                                   this.changeState(\n                                                       {idleTimeout: newIdleTimeout, disabledApply: true, disabledReset: true},\n                                                       this.propsType.idleTimeout, newIdleTimeout); }}/>\n                                        <Tooltip target=\".idleTout\" position=\"top\"/>\n                                        <span className=\"pi pi-question idleTout\"\n                                              style={{marginLeft: \"0.5em\", fontSize: \"0.8em\"}}\n                                              data-pr-tooltip={i18n.t(\"idleTimeoutHint\")}/>\n                                    </div>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"maxLifeTime\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"maxLifeTime\")}</label>\n                                    <div className=\"p-field-checkbox\">\n                                        <InputText id=\"maxLifeTime\" value={this.state.maxLifeTime} style={{width: \"100%\"}}\n                                               onChange={(e) => {\n                                                   let newLifeTime = parseInt(e.target.value, 10);\n                                                   newLifeTime = isNaN(newLifeTime) ? 0: newLifeTime;\n                                                   this.changeState(\n                                                       {maxLifeTime: newLifeTime, disabledApply: true, disabledReset: true},\n                                                       this.propsType.maxLifeTime, newLifeTime); }}/>\n                                        <Tooltip target=\".maxLifeTime\" position=\"top\"/>\n                                        <span className=\"pi pi-question maxLifeTime\"\n                                              style={{marginLeft: \"0.5em\", fontSize: \"0.8em\"}}\n                                              data-pr-tooltip={i18n.t(\"maxLifeTimeHint\")}/>\n                                    </div>\n                                </div>\n                                <div className=\"p-col\">\n                                    <label htmlFor=\"maximumPoolSize\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"maximumPoolSize\")}</label>\n                                    <div className=\"p-field-checkbox\">\n                                        <InputText id=\"maximumPoolSize\" value={this.state.maximumPoolSize} style={{width: \"100%\"}}\n                                                   onChange={(e) => {\n                                                       let newMaximumPoolSize = parseInt(e.target.value, 10);\n                                                       newMaximumPoolSize = isNaN(newMaximumPoolSize) ? 0: newMaximumPoolSize;\n                                                       this.changeState(\n                                                           {maximumPoolSize: newMaximumPoolSize, disabledApply: true, disabledReset: true},\n                                                           this.propsType.maximumPoolSize, newMaximumPoolSize); }}/>\n                                        <Tooltip target=\".maxPoolSize\" position=\"top\"/>\n                                        <span className=\"pi pi-question maxPoolSize\"\n                                              style={{marginLeft: \"0.5em\", fontSize: \"0.8em\"}}\n                                              data-pr-tooltip={i18n.t(\"maximumPoolSizeHint\")}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </Fieldset>\n                    </div>\n                </div>\n                <div className=\"p-grid p-dir-col\">\n                    <div className=\"p-col-12\" style={{marginTop: \"1em\"}}>\n                        <Button label={i18n.t(\"applyChangesBtn\")} style={{float: \"left\", width: \"100%\"}} disabled={this.state.disabledApply}\n                                onClick={this.changeDatasource}/>\n                    </div>\n                    <div className=\"p-col-12\" style={{marginTop: \"1em\"}}>\n                        <Button className=\"p-button-warning\" label={i18n.t(\"reset\")} style={{float: \"left\", width: \"100%\"}}\n                                disabled={this.state.disabledReset}\n                                onClick={this.reset}/>\n                    </div>\n                </div>\n            </Fieldset>\n        </>\n        );\n    }\n}","\nexport function dbType() {\n    return [\n        {\n            name: \"firebirdsql\",\n            driver: \"org.firebirdsql.jdbc.FBDriver\"\n        },\n        {\n            name: \"mysql\",\n            driver: \"com.mysql.jdbc.Driver\"\n        },\n        {\n            name: \"postgresql\",\n            driver: \"org.postgresql.Driver\"\n        },\n        {\n            name: \"db2\",\n            driver: \"COM.ibm.db2.jdbc.app.DB2Driver\"\n        }\n    ]\n}","import API from './API';\n\nexport class ClientTimeoutService {\n\n    async getClientTimeout() {\n        return (await API.get('/clients/timeout')).data;\n    }\n\n    async changeClientTimeout(toutValue) {\n        let toutBody = {\n            client_timeout: toutValue\n        };\n\n        return (await API.put('/clients/timeout', toutBody)).data;\n    }\n}\n","import React from 'react';\nimport {Component} from \"react\";\nimport {Button} from \"primereact/button\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport {InputText} from \"primereact/inputtext\";\nimport {ClientTimeoutService} from \"../service/ClientTimeoutService\";\nimport _ from \"lodash\";\nimport {Toast} from \"primereact/toast\";\nimport \"./ClientSettingsView.css\";\nimport {appSettings} from \"./AppSettings\";\nimport i18n from \"i18next\";\n\nexport class ClientSettingsView extends Component {\n\n    smallHintStyleClasses = {\n        visible: \"sm-cl-tout-hint-v\",\n        hidden: \"sm-cl-tout-hint-h\"\n    };\n\n    settingsType = {\n        clientTimeout: \"clientTimeout\"\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientTimeout: 0,\n            disabledApply: true,\n            disabledReset: true,\n            smallStyleClass: this.smallHintStyleClasses.hidden,\n            current: {\n                clientTimeout: 0\n            }\n        };\n\n        this.clientTimeoutService = new ClientTimeoutService();\n\n        this.changeClientSettings = this.changeClientSettings.bind(this);\n        this.changeState = this.changeState.bind(this);\n        this.checkApply = this.checkApply.bind(this);\n        this.checkSetting = this.checkSetting.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    async componentDidMount() {\n        this.clientTimeoutService.getClientTimeout().then(data => {\n            this.setState({\n                clientTimeout: data[\"client_timeout\"],\n                current: {\n                    clientTimeout: data[\"client_timeout\"]\n                }\n            });\n        });\n    }\n\n    async changeClientSettings() {\n        try {\n            let data = await this.clientTimeoutService.changeClientTimeout(this.state.clientTimeout);\n\n            this.setState({\n                current: {\n                    clientTimeout: this.state.clientTimeout\n                },\n                disabledApply: true,\n                disabledReset: true\n            });\n\n            this.toast.show({\n                severity: 'success',\n                summary: 'Successful',\n                detail: data.message,\n                life: appSettings.TOAST_LIVE\n            });\n\n            this.props.restart();\n        } catch (e) {\n            let response = e.response.data;\n            console.log(response);\n            console.log('Change clients timeout failed: ' + response);\n            this.toast.show({\n                severity: 'error',\n                summary: 'Error',\n                detail: response.message,\n                life: appSettings.TOAST_LIVE\n            });\n        }\n    }\n\n    changeState(chState, type, value) {\n        let disabled = this.checkApply(type, value);\n        chState.disabledApply = disabled;\n        chState.disabledReset = disabled;\n        this.setState(chState);\n    }\n\n    checkSetting(currentType, settingType, value, defaultValue) {\n        return currentType === settingType ? value : defaultValue;\n    }\n\n    checkApply(type, value) {\n        if (typeof value === \"string\") {\n            if (value === \"\")\n                return true;\n        } else if (typeof value === \"number\") {\n            if (value < 0)\n                return true;\n        }\n\n        let newSettings = {\n            clientTimeout: 0\n        };\n\n        newSettings.clientTimeout = this.checkSetting(type, this.settingsType.clientTimeout, value, this.state.clientTimeout);\n\n        return _.isEqual(newSettings, this.state.current);\n    }\n\n    reset() {\n        this.setState({\n            clientTimeout: this.state.current.clientTimeout,\n            disabledApply: true,\n            disabledReset: true\n        });\n    }\n\n    render() {\n        return (<>\n            <Toast ref={(el) => this.toast = el} />\n            <Fieldset legend={i18n.t('clients')} style={{marginTop: \"1em\"}}>\n                <div className=\"p-grid p-dir-col\">\n                    <div className=\"p-col\">\n                        <label htmlFor=\"clTout\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"clientTimeoutValue\")}</label>\n                        <InputText value={this.state.clientTimeout} aria-describedby=\"clTout-help\"\n                                   onChange={(e) => {\n                                       let newClTout = parseInt(e.target.value, 10);\n                                       newClTout = isNaN(newClTout) ? 0: newClTout;\n                                       this.changeState(\n                                           {clientTimeout: newClTout, disabledApply: true, disabledReset: true},\n                                           this.settingsType.clientTimeout, newClTout);\n                                   }}\n                                   onFocus={() => this.setState({smallStyleClass: this.smallHintStyleClasses.visible})}\n                                   onBlur={() => this.setState({smallStyleClass: this.smallHintStyleClasses.hidden})}\n                                   autoComplete=\"off\" id=\"clTout\" className=\"p-d-block\" style={{width: \"100%\"}}/>\n                        <small id=\"clTout-help\" className={this.state.smallStyleClass}\n                               style={{float: \"left\", marginTop: \"0.3em\"}}>{i18n.t(\"clientTimeoutValueHint\")}</small>\n                    </div>\n                    <div className=\"p-col\" style={{marginTop: \"1em\"}}>\n                        <Button label={i18n.t(\"applyChangesBtn\")} disabled={this.state.disabledApply}\n                                style={{float: \"left\", width: \"100%\"}}\n                                onClick={this.changeClientSettings}/>\n                    </div>\n                    <div className=\"p-col\" style={{marginTop: \"1em\"}}>\n                        <Button className=\"p-button-warning\" label={i18n.t(\"reset\")} disabled={this.state.disabledReset}\n                                style={{float: \"left\", width: \"100%\"}}\n                                onClick={this.reset}/>\n                    </div>\n                </div>\n            </Fieldset>\n            </>\n        );\n    }\n}","import API from './API';\n\nexport class RestartService {\n\n    async restart() {\n        return (await API.get(\"/restart\")).data;\n    }\n}\n","import React from 'react';\nimport {Component} from \"react\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport \"./ClientSettingsView.css\";\nimport {Dropdown} from \"primereact/dropdown\";\nimport {changeLanguage, languages} from \"../utils/Translate\";\nimport i18n from \"i18next\";\n\nexport class OtherSettingsView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLang: this.props.lang,\n            isDarkMode: this.props.isDarkMode\n        };\n\n        this.onLangChange = this.onLangChange.bind(this);\n        // this.changeMode = this.changeMode.bind(this);\n    }\n\n    onLangChange(e) {\n        this.setState({ selectedLang: e.value});\n        changeLanguage(e.value);\n        this.props.refresh();\n    }\n\n    // changeMode(value) {\n    //     if(value === true) {\n    //         var head  = document.getElementsByTagName('head')[0];\n    //         var link  = document.createElement('link');\n    //         link.rel  = 'stylesheet';\n    //         link.type = 'text/css';\n    //         link.href = 'http://your-website.com/path-to-css-file/theme.css';\n    //         link.media = 'all';\n    //         head.appendChild(link);\n    //     }\n    //\n    //     this.setState({isDarkMode: value})\n    // }\n\n    render() {\n        return (<>\n                <Fieldset legend={i18n.t(\"other\")} style={{marginTop: \"1em\"}}>\n                    <div className=\"p-grid p-dir-col\">\n                        <div className=\"p-col\">\n                            <label htmlFor=\"clTout\" className=\"p-d-block\" style={{textAlign: \"left\"}}>{i18n.t(\"language\")}</label>\n                            <Dropdown style={{float: \"left\", marginTop: \"0.2em\"}} value={this.state.selectedLang}\n                                      options={languages} onChange={this.onLangChange} optionLabel=\"lng\"\n                                      optionValue=\"code\" placeholder={i18n.t(\"languagePlaceholder\")} />\n                        </div>\n                    </div>\n                </Fieldset>\n            </>\n        );\n    }\n}","import React, {Component} from 'react';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css'\nimport {DatasourceView} from \"./DatasourceView\";\nimport {ClientSettingsView} from \"./ClientSettingsView\";\nimport {Button} from \"primereact/button\";\nimport {RestartService} from \"../service/RestartService\";\nimport {appSettings} from \"./AppSettings\";\nimport {Toast} from \"primereact/toast\";\nimport {OtherSettingsView} from \"./OtherSettingsView\";\nimport i18n from \"i18next\";\n\nlet restartState = false;\n\nconst iconRestartButton = {\n    basic: \"pi pi-refresh\",\n    anim: \"pi pi-spin pi-refresh\"\n};\n\nexport class SettingsView extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRestartButton: restartState,\n            iconButtonClassName: iconRestartButton.basic,\n            restartBtnText: i18n.t(\"restart\")\n        };\n\n        this.restartService = new RestartService();\n\n        this.needRestart = this.needRestart.bind(this);\n        this.refresh = this.refresh.bind(this);\n        this.restart = this.restart.bind(this);\n    }\n\n    needRestart() {\n        restartState = true;\n        this.setState({\n            showRestartButton: restartState\n        });\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    refresh() {\n        this.forceUpdate();\n        this.props.refresh();\n    }\n\n    async restart() {\n        this.setState({\n            iconButtonClassName: iconRestartButton.anim\n        });\n        let result = await this.restartService.restart();\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: result.message, life: appSettings.TOAST_LIVE });\n\n        restartState = false;\n        let resSec = 5;\n        let btnTxt = i18n.t(\"restartTime\") + \" \" + resSec + i18n.t(\"restartTimeSec\") + \"...\";\n        this.setState({\n            restartBtnText: btnTxt\n        });\n\n        setTimeout(() => { window.location.replace(\"/login\") }, resSec * 1000);\n    }\n\n    render() {\n        return (\n            <div>\n                <Toast ref={(el) => this.toast = el} />\n                {this.state.showRestartButton ? (\n                    <Button className=\"p-button-rounded p-button-outlined\" style={{marginTop: \"0.5em\"}}\n                            icon={this.state.iconButtonClassName} label={this.state.restartBtnText}\n                            onClick={this.restart}/> ) :\n                    (<div/>)}\n                <div className=\"p-grid nested-grid\">\n                    <div className=\"p-col-12 p-md-8 p-lg-8\">\n                        <DatasourceView restart={this.needRestart} lang={this.props.lang}/>\n                    </div>\n                    <div className=\"p-col-12 p-md-4 p-lg-4\">\n                    <div className=\"p-grid p-dir-col\">\n                        <div className=\"p-col\">\n                            <ClientSettingsView restart={this.needRestart}/>\n                        </div>\n                        <div className=\"p-col\">\n                            <OtherSettingsView refresh={this.refresh} lang={this.props.lang}/>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import API from './API';\n\nexport class LogService {\n\n    async getLogs() {\n        return (await API.get(\"/logs\")).data;\n    }\n}\n","import React from \"react\";\nimport {Component} from \"react\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport {LogService} from \"../service/LogService\";\nimport {InputText} from \"primereact/inputtext\";\nimport {Dropdown} from \"primereact/dropdown\";\nimport {Row} from \"primereact/row\";\nimport {ColumnGroup} from \"primereact/columngroup\";\nimport i18n from \"i18next\";\nimport {Calendar} from \"primereact/calendar\";\nimport {getCalendarLocation} from \"../utils/Translate\";\n\nexport class DataTableLogs extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            logs: null,\n            logsAmount: 0,\n            searchText: \"\",\n            date: null,\n            types: [],\n            selectedTypes: null,\n            searchChips: [],\n            minDate: null,\n            maxDate: null\n        };\n\n        this.logService = new LogService();\n        this.delaySearchTimer = null;\n        this.handleSearch = this.handleSearch.bind(this);\n\n        this.headerTemplate = this.headerTemplate.bind(this);\n        this.typeBodyTemplate = this.typeBodyTemplate.bind(this);\n        this.onTypeFilterChange = this.onTypeFilterChange.bind(this);\n        this.onMessageFilterInput = this.onMessageFilterInput.bind(this);\n        this.typeItemTemplate = this.typeItemTemplate.bind(this);\n    }\n\n    componentDidMount() {\n        this.logService.getLogs().then(data => {\n            let datesLog = [];\n\n            data.logs.forEach(log => {\n                datesLog.push(log.date);\n            });\n\n            let sortDatesLog = datesLog.sort();\n            let minDateArr = sortDatesLog[0].split(\"-\").map(d=>+d);\n            let maxDateArr = sortDatesLog[sortDatesLog.length - 1].split(\"-\").map(d=>+d);\n\n            let minDate = new Date(minDateArr[2], minDateArr[1]-1, minDateArr[0]);\n            let maxDate = new Date(maxDateArr[2], maxDateArr[1]-1, maxDateArr[0]);\n\n            this.setState({\n                logs: data.logs,\n                logsAmount: data.logs.length,\n                types: data.types,\n                minDate: minDate,\n                maxDate: maxDate\n            });\n        });\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if(prevState.searchText !== this.state.searchText) {\n            this.handleSearch();\n        }\n    }\n\n    handleSearch = () => {\n        clearTimeout(this.delaySearchTimer);\n        this.delaySearchTimer = setTimeout(() => {\n            this.setState({globalFilter: this.state.searchText})\n        }, 500);\n    };\n\n    headerTemplate(data) {\n        return (\n            <div className=\"p-card\" style={{padding: \"0.5em\", display: \"inline-block\"}}>\n                <div style={{fontWeight: \"bold\", fontSize: \"16pt\"}}>{data.date}</div>\n            </div>\n        );\n    }\n\n    footerTemplate() {\n        return (<></>);\n    }\n\n    typeBodyTemplate(rowData) {\n        if (rowData.type === \"Error\") {\n            return (\n                <div style={{color: \"#D32F2F\", fontWeight: \"bold\"}}>\n                    {rowData.type}\n                </div>);\n        } else {\n            return (\n                <div style={{color: \"#689F38\", fontWeight: \"bold\"}}>\n                    {rowData.type}\n                </div>\n            )\n        }\n    }\n\n    renderHeader() {\n        return (\n            <div style={{textAlign: \"left\"}}>\n                <span className=\"p-input-icon-left\">\n                    <i className=\"pi pi-search\"/>\n                    <InputText\n                        type=\"search\"\n                        onInput={ (e) => this.setState({searchText: e.target.value}) }\n                        placeholder={i18n.t(\"globalSearch\")}/>\n                </span>\n                <Calendar ref={(cal) => this.cal = cal}\n                          dateFormat=\"dd.mm.yy\" placeholder={i18n.t(\"pickADate\")}\n                          value={this.state.date}\n                          style={{width: \"300px\", marginLeft: \"0.5em\", textAlign: \"left\"}}\n                          minDate={this.state.minDate}\n                          maxDate={this.state.maxDate}\n                          readOnlyInput\n                          showButtonBar\n                          locale={getCalendarLocation(this.props.lang)}\n                          onChange={(e) => {\n                              this.setState({date: e.value});\n                              try {\n                                  let dt = e.value;\n                                  let day = dt.getDate();\n                                  let zero = (day / 10) < 1 ? \"0\" : \"\";\n                                  let month = dt.getMonth() + 1;\n                                  let year = dt.getFullYear();\n                                  let res = [day, month, year].join(\".\");\n                                  this.onMessageFilterInput(zero + res);\n                              } catch (er) {\n                                  this.onMessageFilterInput(\"\");\n                              }\n                          }}/>\n            </div>\n        );\n    }\n\n    renderFooterGroup(logsAmount) {\n        let str = i18n.t(\"recordsSummary\") + \" \" + logsAmount;\n        return (\n            <ColumnGroup>\n                <Row>\n                    <Column footer={str} colSpan={3} footerStyle={{textAlign: 'right'}}/>\n                </Row>\n            </ColumnGroup>\n        );\n    }\n\n    renderTypeFilter() {\n        return (\n            <Dropdown value={this.state.selectedTypes} options={this.state.types} onChange={this.onTypeFilterChange}\n                      itemTemplate={this.typeItemTemplate}\n                      showClear\n                      placeholder={i18n.t(\"selectAType\")}\n                      className=\"p-column-filter\"\n                      /*style={{width: \"10.5em\"}}*//>\n        );\n    }\n\n    renderMessageFilter() {\n        return (\n                <InputText style={{width: \"30em\"}}\n                       onInput={(e) => this.onMessageFilterInput(e.target.value)}\n                       className=\"p-column-filter\"\n                       placeholder={i18n.t(\"searchByMessage\")}/>\n        );\n    }\n\n    typeItemTemplate(option) {\n        if (option === \"Error\") {\n            return (\n                <span style={{color: \"#D32F2F\", fontWeight: \"bold\"}}>\n                    {option}\n                </span>);\n        } else {\n            return (\n                <span style={{color: \"#689F38\", fontWeight: \"bold\"}}>\n                    {option}\n                </span>\n            )\n        }\n    }\n\n    onTypeFilterChange(event) {\n        this.dt.filter(event.value, 'type', 'equals');\n        this.setState({selectedTypes: event.value});\n    }\n\n    onMessageFilterInput(text) {\n        this.dt.filter(text, 'msg', 'contains');\n    }\n\n    render() {\n        const header = this.renderHeader();\n        const typeFilter = this.renderTypeFilter();\n        const msgFilter = this.renderMessageFilter();\n\n        return (\n            <div>\n                <DataTable ref={(el) => this.dt = el}\n                           header={header}\n                           value={this.state.logs}\n                           rowGroupMode=\"subheader\"\n                           groupField=\"date\"\n                           emptyMessage={i18n.t(\"logsNotFound\")}\n                           sortMode=\"single\"\n                           sortField=\"date\"\n                           globalFilter={this.state.globalFilter}\n                           rowGroupHeaderTemplate={this.headerTemplate}\n                           rowGroupFooterTemplate={this.footerTemplate}\n                           footerColumnGroup={this.renderFooterGroup(this.state.logsAmount)}\n                           sortOrder={1}\n                           paginator={true}\n                           rows={10}\n                           rowsPerPageOptions={[10,25,50]}\n                           responsive\n                           paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                           currentPageReportTemplate={i18n.t(\"from\") + \" {first} \" + i18n.t(\"to\") + \" {last} \" + i18n.t(\"of\") + \" {totalRecords}\"}>\n                    <Column header=\"#\" body={(data, props) => props.rowIndex + 1} style={{width: \"5%\", color:\"gray\"}}/>\n                    <Column field=\"type\" body={this.typeBodyTemplate} header={i18n.t(\"type\")} style={{width: \"10%\"}}\n                            filter\n                            filterElement={typeFilter}/>\n                    <Column field=\"msg\" header={i18n.t(\"message\")} style={{width: \"85%\", wordWrap: \"break-word\"}}\n                            filter\n                            filterElement={msgFilter}\n                            />\n                </DataTable>\n            </div>\n        );\n    }\n}","import React, {Component, createRef} from \"react\";\nimport {TabMenu} from \"primereact/tabmenu\";\nimport {DataTableClients} from \"./DataTableClients\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport {DataTableBlacklist} from \"./DataTableBlacklist\";\nimport {SettingsView} from \"./SettingsView\";\nimport {DataTableLogs} from \"./DataTableLogs\";\nimport i18n from \"i18next\";\nimport {getLanguage} from \"../utils/Translate\";\nimport \"./LSTabMenu.css\";\nimport {getCookie, setCookie} from \"../utils/CookiesUtils\";\n\nclass LSTabMenuInner extends Component {\n\n    menus = [ {\n        label: i18n.t(\"clients\"),\n        keyLabel: \"clients\",\n        icon: \"pi pi-fw pi-users\",\n        path: \"/clients\",\n        command: () => { window.location.hash = \"/clients\" }\n    }, {\n        label: i18n.t(\"blacklist\"),\n        keyLabel: \"blacklist\",\n        icon: \"pi pi-fw pi-ban\",\n        path: \"/blacklist\",\n        command: () => { window.location.hash = \"/blacklist\" }\n    }, {\n        // label: \"Devices\",\n        // icon: \"pi pi-fw pi-mobile\",\n        // command: () => { window.location.hash = \"/devices\"}\n        // }, {\n        label: i18n.t(\"logs\"),\n        keyLabel: \"logs\",\n        icon: \"pi pi-fw pi-desktop\",\n        path: \"/logs\",\n        command: () => { window.location.hash = \"/logs\" }\n    }, {\n        label: i18n.t(\"settings\"),\n        keyLabel: \"settings\",\n        icon: \"pi pi-fw pi-cog\",\n        path: \"/settings\",\n        command: () => { window.location.hash = \"/settings\" }\n    }];\n\n    constructor(props) {\n        super(props);\n        this.refresh = this.refresh.bind(this);\n        this.tabRef = createRef();\n\n        let tabMenu = this.menus[0];\n        if(getCookie(\"tabKeyLabel\") !== undefined) {\n            let tabKeyLabel = getCookie(\"tabKeyLabel\");\n            tabMenu = this.menus.find((e, i, a) => {\n                if(e.keyLabel === tabKeyLabel)\n                    return e;\n                else\n                    return false;\n            });\n        }\n\n        this.state = {\n            activeItem: tabMenu,\n            tabName: i18n.t(tabMenu.keyLabel)\n        }\n\n    }\n\n    refresh() {\n        this.forceUpdate();\n        this.menus.forEach(menu => { menu.label = i18n.t(menu.keyLabel) });\n        this.setState({\n            tabName: i18n.t(this.state.activeItem.keyLabel)\n        });\n    }\n\n    setActiveIndex(path) {\n        let _activeItem = this.menus.filter(menu => { return menu.path === path; });\n\n        this.setState({\n            activeItem: _activeItem[0],\n            tabName: i18n.t(_activeItem[0].keyLabel)\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <span id=\"tabName\" style={{fontSize: \"3rem\"}}>{this.state.tabName}</span>\n                <TabMenu id=\"lsTabMenu\" ref={this.tabRef}\n                         onTabChange={(e) => {\n                             setCookie(\"tabKeyLabel\", e.value.keyLabel);\n                             setCookie(\"hashLink\", e.value.path);\n                             this.setState({activeItem: e.value}) }\n                         }\n                         activeItem={this.state.activeItem} model={this.menus} />\n            </>);\n    }\n}\n\nexport class LSTabMenu extends Component {\n\n    constructor(props) {\n        super(props);\n        this.lsTabRef = React.createRef();\n        this.refresh = this.refresh.bind(this);\n    }\n\n    refresh() {\n        this.lsTabRef.current.refresh();\n    }\n\n    setActiveIndex(path) {\n        this.lsTabRef.current.setActiveIndex(path);\n    }\n\n    render() {\n        return (\n            <Router>\n                <LSTabMenuInner ref={this.lsTabRef}/>\n                <Route key=\"/clients\" exact path=\"/clients\" component={() => <DataTableClients/>}/>\n                <Route key=\"/blacklist\" exact path=\"/blacklist\" component={() => <DataTableBlacklist/>}/>\n                {/*<Route key=\"/devices\" exact path=\"/devices\"/>*/}\n                <Route key=\"/logs\" exact path=\"/logs\" component={() => <DataTableLogs lang={getLanguage()}/>}/>\n                <Route key=\"/settings\" exact path=\"/settings\"\n                       component={() => <SettingsView refresh={this.refresh} lang={getLanguage()}/>}/>\n            </Router>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Sidebar} from \"primereact/sidebar\";\nimport {Button} from \"primereact/button\";\nimport i18n from \"i18next\";\nimport ls_logo from '../static/ls_logo_svg.svg'\nimport {setCookie} from \"../utils/CookiesUtils\";\n\nexport class MainSidebar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.changeRoute = this.changeRoute.bind(this);\n        this.refresh = this.refresh.bind(this);\n    }\n\n    changeRoute(path) {\n        setCookie(\"tabKeyLabel\", path.substr(1));\n        setCookie(\"hashLink\", path);\n        window.location.hash = path;\n        this.props.onHideSidebar(path);\n    }\n\n    refresh() {\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <Sidebar visible={this.props.onShowSidebar} onHide={this.props.onHideSidebar}>\n                <img src={ls_logo} alt=\"\" width=\"64\" height=\"64\"/>\n                <h1 style={{ fontWeight: 'normal' }}>LightSearch</h1>\n                <div className=\"p-grid p-dir-col\">\n                    <Button icon=\"pi pi-fw pi-users\" label={i18n.t(\"clients\")}\n                            onClick={() => this.changeRoute(\"/clients\")}/>\n                    <Button icon=\"pi pi-fw pi-ban\" label={i18n.t(\"blacklist\")} style={{marginTop: \"0.5em\"}}\n                            onClick={() => this.changeRoute(\"/blacklist\")}/>\n                    <Button icon=\"pi pi-fw pi-desktop\" label={i18n.t(\"logs\")} style={{marginTop: \"0.5em\"}}\n                            onClick={() => this.changeRoute(\"/logs\")}/>\n                    <Button icon=\"pi pi-fw pi-cog\" label={i18n.t(\"settings\")} style={{marginTop: \"0.5em\"}}\n                            onClick={() => this.changeRoute(\"/settings\")}/>\n                </div>\n            </Sidebar>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {MainSidebar} from \"./MainSidebar\";\nimport {Button} from \"primereact/button\";\n\nexport class SidebarButton extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSidebarVisible: false\n        };\n\n        this.onHideSidebar = this.onHideSidebar.bind(this);\n    }\n\n    onHideSidebar(path) {\n        this.setState({\n            isSidebarVisible: false\n        });\n        if(path !== undefined) {\n            this.props.tabMenuRef.current.setActiveIndex(path);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MainSidebar refresh={this.props.refresh} onShowSidebar={this.state.isSidebarVisible} onHideSidebar={this.onHideSidebar}/>\n                <Button icon=\"pi pi-bars\" className=\"p-button-secondary\"\n                        style={{ position: \"sticky\", marginLeft: \"0.3em\", float: \"left\"}}\n                        onClick={()=>{ this.setState({isSidebarVisible: true}) }} />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport ls_logo from '../static/ls_logo_big.png'\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport {LSTabMenu} from \"./LSTabMenu\";\nimport {getLanguage, initLanguage} from \"../utils/Translate\";\nimport {SidebarButton} from \"./SidebarButton\";\nimport {getCookie} from \"../utils/CookiesUtils\";\n\nconst lang = getLanguage();\ninitLanguage(lang);\n\nlet hashLink = getCookie(\"hashLink\");\nif(hashLink !==undefined )\n    window.location.hash = hashLink;\nelse\n    window.location.hash = \"clients\";\n\nfunction App() {\n    let tabMenuRef = React.createRef();\n    return (\n        <div className=\"App\">\n            <SidebarButton tabMenuRef={tabMenuRef}/>\n            <div style={{margin: \"1em\"}}>\n                <img src={ls_logo} alt=\"logo\" width=\"150\" height=\"150\"/>\n            </div>\n            <div className=\"p-card\" style={{padding: \"0.5em\", borderRadius: \"3px\"}}>\n                <LSTabMenu ref={tabMenuRef}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ls_logo_big.e65af6f7.png\";","module.exports = __webpack_public_path__ + \"static/media/ls_logo_svg.54d4b73c.svg\";"],"sourceRoot":""}